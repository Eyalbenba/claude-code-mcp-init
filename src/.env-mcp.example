# Claude MCP Server Configuration Environment Variables
# Copy this file to .env-mcp and fill in your actual values
#
# Quick Start:
# 1. cp .env-mcp.example .env-mcp
# 2. Edit .env-mcp with your API keys
# 3. Run: claude-mcp configure
#
# Note: UVX path is now auto-detected! No manual configuration needed.

# =============================================================================
# AWS Configuration (Required for CloudWatch Logs MCP Server)
# =============================================================================
AWS_PROFILE=your-aws-profile
AWS_REGION=us-east-1
FASTMCP_LOG_LEVEL=INFO

# =============================================================================
# MongoDB Configuration (Optional - for MongoDB MCP Server)
# =============================================================================
MDB_MCP_CONNECTION_STRING="mongodb+srv://user:password@cluster.mongodb.net/database?retryWrites=true&w=majority"
DO_NOT_TRACK=1
MDB_MCP_READ_ONLY=true
MDB_MCP_TELEMETRY=disabled

# =============================================================================
# Snowflake Configuration (Optional - for Snowflake MCP Server)
# =============================================================================
SNOWFLAKE_ACCOUNT=your-account-identifier
SNOWFLAKE_USER=your-username
SNOWFLAKE_PASSWORD=your-password
SNOWFLAKE_DATABASE=your-database
SNOWFLAKE_WAREHOUSE=your-warehouse
SNOWFLAKE_SCHEMA=your-schema

# =============================================================================
# Linear Configuration (Optional - for Linear MCP Server)
# Note: Linear uses a remote server - no API key needed!
# =============================================================================
# LINEAR_API_KEY=not-needed-for-remote-server

# =============================================================================
# Notion Configuration (Optional - for Notion MCP Server)
# =============================================================================
NOTION_API_KEY=your-notion-api-key

# =============================================================================
# GitHub Configuration (Optional - for GitHub MCP Server)
# Choose one based on GITHUB_MCP_TYPE setting in configure-mcp-servers.sh:
# =============================================================================
# For GitHub Copilot MCP (HTTP transport) - set GITHUB_MCP_TYPE="copilot"
GITHUB_PAT=your-github-personal-access-token

# For uvx GitHub MCP (stdio transport) - set GITHUB_MCP_TYPE="uvx"
GITHUB_TOKEN=your-github-token

# =============================================================================
# Zen MCP Server (Optional - for LLM Consensus)
# =============================================================================
OPENAI_API_KEY=your-openai-api-key

# =============================================================================
# Tavily Web Search Configuration (Optional - for Web Search MCP Server)
# =============================================================================
TAVILY_API_KEY=your-tavily-api-key

# =============================================================================
# Additional Configuration Options
# =============================================================================

# Logging level for MCP servers (INFO, DEBUG, WARNING, ERROR)
FASTMCP_LOG_LEVEL=INFO

# Custom UVX path override (usually not needed - auto-detected)
# UVX_PATH_OVERRIDE=/custom/path/to/uvx

# =============================================================================
# Usage Notes
# =============================================================================
#
# Getting Started:
# 1. Copy this file: cp .env-mcp.example .env-mcp
# 2. Add your API keys to .env-mcp
# 3. Run: claude-mcp status (to check requirements)
# 4. Run: claude-mcp configure (to set up servers)
#
# Server Requirements:
# - AWS CloudWatch: AWS_PROFILE, AWS_REGION (for log access)
# - Snowflake: All SNOWFLAKE_* variables (for database queries)
# - GitHub: GITHUB_PAT (for Copilot) or GITHUB_TOKEN (for uvx)
# - Notion: NOTION_API_KEY (for documentation access)
# - Tavily: TAVILY_API_KEY (for web search)
# - Zen: OPENAI_API_KEY + zen-mcp-server directory (for AI enhancement)
# - MongoDB: MDB_MCP_CONNECTION_STRING (for database operations)
# - Linear: No API key needed (uses remote server)
#
# Security:
# - This .env-mcp file is automatically gitignored
# - Never commit API keys to version control
# - Each team member should have their own .env-mcp file
#
# Support:
# - Run: claude-mcp help
# - Check: .agent/.claude/mcp-setup/README.md
# - Team setup: .agent/.claude/mcp-setup/TEAM_SETUP.md
